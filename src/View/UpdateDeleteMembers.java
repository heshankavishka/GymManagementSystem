/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.MemberController;
import Model.DBSearch;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class UpdateDeleteMembers extends javax.swing.JFrame {

    /**
     * Creates new form AddMember
     */
    
    private MemberController memberController;

    private DBSearch dbSearch;
    
    public UpdateDeleteMembers() {
        initComponents();
        dbSearch = new DBSearch();

    }
    
    private void sendDataToController() {
        String memberID = memberIdInput.getText().trim();
        String fullName = fullNameInput.getText().trim();
        String gender = (String) genderInput.getSelectedItem();
        String email = emailInput.getText().trim();
        String phoneNumber = phoneNumberInput.getText().trim();

        if (memberID.isEmpty() || fullName.isEmpty() || gender.isEmpty() || 
                email.isEmpty() || phoneNumber.isEmpty()) {
            JOptionPane.showMessageDialog(null, "All fields must be filled out", 
                    "Input Error", JOptionPane.ERROR_MESSAGE);
        } else {
            MemberController.Members(memberID, fullName, gender, email, phoneNumber);
        }
    }

    public void clearField() {
        memberIdInput.setText("");
        fullNameInput.setText("");
        emailInput.setText("");
        phoneNumberInput.setText("");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        closeBtn = new javax.swing.JLabel();
        memberIdText = new javax.swing.JLabel();
        memberIdInput = new javax.swing.JTextField();
        fullNameText = new javax.swing.JLabel();
        genderText = new javax.swing.JLabel();
        fullNameInput = new javax.swing.JTextField();
        emailText = new javax.swing.JLabel();
        emailInput = new javax.swing.JTextField();
        phoneNumberText = new javax.swing.JLabel();
        phoneNumberInput = new javax.swing.JTextField();
        UpdateMemberBtn = new javax.swing.JButton();
        genderInput = new javax.swing.JComboBox<>();
        getMemberDataBtn = new javax.swing.JButton();
        DeleteMemberBtn = new javax.swing.JButton();
        Topic = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        closeBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        closeBtn.setText("X");
        closeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeBtnMouseClicked(evt);
            }
        });

        memberIdText.setText("Member ID");

        memberIdInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memberIdInputActionPerformed(evt);
            }
        });

        fullNameText.setText("Full Name");

        genderText.setText("Gender");

        fullNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fullNameInputActionPerformed(evt);
            }
        });

        emailText.setText("Email Address");

        emailInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailInputActionPerformed(evt);
            }
        });

        phoneNumberText.setText("Phone Number");

        UpdateMemberBtn.setText("Update Member");
        UpdateMemberBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateMemberBtnActionPerformed(evt);
            }
        });

        genderInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        getMemberDataBtn.setText("Get Data");
        getMemberDataBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getMemberDataBtnActionPerformed(evt);
            }
        });

        DeleteMemberBtn.setText("Delete Member");
        DeleteMemberBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteMemberBtnActionPerformed(evt);
            }
        });

        Topic.setFont(new java.awt.Font("Dubai", 1, 22)); // NOI18N
        Topic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Topic.setText("Gym Management System - Update & Delete Trainer");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(closeBtn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DeleteMemberBtn)
                                .addGap(18, 18, 18)
                                .addComponent(UpdateMemberBtn))
                            .addComponent(Topic, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(genderText)
                            .addComponent(emailText)
                            .addComponent(phoneNumberText)
                            .addComponent(fullNameText)
                            .addComponent(memberIdText))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emailInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(phoneNumberInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fullNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(memberIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(genderInput, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(getMemberDataBtn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Topic)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(memberIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(memberIdText)
                    .addComponent(getMemberDataBtn))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fullNameText)
                    .addComponent(fullNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genderText)
                    .addComponent(genderInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailText)
                    .addComponent(emailInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneNumberText)
                    .addComponent(phoneNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UpdateMemberBtn)
                    .addComponent(DeleteMemberBtn))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void fullNameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullNameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fullNameInputActionPerformed

    private void UpdateMemberBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateMemberBtnActionPerformed
        String memberID = memberIdInput.getText().trim();
        String fullName = fullNameInput.getText().trim();
        String gender = (String) genderInput.getSelectedItem();
        String email = emailInput.getText().trim();
        String phoneNumber = phoneNumberInput.getText().trim();

        if (memberID.isEmpty() || fullName.isEmpty() || gender.isEmpty() || 
                email.isEmpty() || phoneNumber.isEmpty()) {
            JOptionPane.showMessageDialog(null, "All fields must be filled out", 
                    "Input Error", JOptionPane.ERROR_MESSAGE);
        } else {
            boolean success = memberController.updateMember(memberID, fullName, gender, email, phoneNumber);
            if (success) {
                JOptionPane.showMessageDialog(null, "Member information updated successfully", 
                        "Update Successful", JOptionPane.INFORMATION_MESSAGE);
                clearField();
            } else {
                JOptionPane.showMessageDialog(null, "Failed to update member information", 
                        "Update Failed", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_UpdateMemberBtnActionPerformed

    private void closeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeBtnMouseClicked
        dispose();
    }//GEN-LAST:event_closeBtnMouseClicked

    private void memberIdInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memberIdInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_memberIdInputActionPerformed

    private void getMemberDataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getMemberDataBtnActionPerformed
        try {
            String memberID = memberIdInput.getText().trim();

            if (memberID == null) {
                JOptionPane.showMessageDialog(this, "Please Type a memberID.", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }

            ResultSet resultSet = dbSearch.searchMemberDetailsByID(memberID);

            if (resultSet != null && resultSet.next()) {
                fullNameInput.setText(resultSet.getString("fullname"));
                genderInput.setSelectedItem(resultSet.getString("gender"));
                emailInput.setText(resultSet.getString("email"));
                phoneNumberInput.setText(resultSet.getString("phonenumber"));

            } else {
                JOptionPane.showMessageDialog(this, "No member found for the Typed memberID.", "No Data", JOptionPane.INFORMATION_MESSAGE);
            }

            if (resultSet != null && !resultSet.isClosed()) {
                resultSet.close();
            }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "An error occurred while searching for members.", "Error", JOptionPane.ERROR_MESSAGE);
    }
        
    }//GEN-LAST:event_getMemberDataBtnActionPerformed

    private void DeleteMemberBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteMemberBtnActionPerformed
    String memberID = memberIdInput.getText().trim();

    if (memberID.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Member ID must be filled out", 
                "Input Error", JOptionPane.ERROR_MESSAGE);
    } else {
        int confirmation = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this member?", 
                "Confirm Deletion", JOptionPane.YES_NO_OPTION);
        
        if (confirmation == JOptionPane.YES_OPTION) {
            try {
                boolean success = MemberController.deleteMember(memberID);
                
                if (success) {
                    JOptionPane.showMessageDialog(null, "Member deleted successfully", 
                            "Deletion Successful", JOptionPane.INFORMATION_MESSAGE);
                    clearField();
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to delete member", 
                            "Deletion Failed", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
                    JOptionPane.showMessageDialog(null, "An error occurred while deleting member", 
                        "Deletion Failed", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    }//GEN-LAST:event_DeleteMemberBtnActionPerformed

    private void emailInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailInputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteMembers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteMembers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteMembers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteMembers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateDeleteMembers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteMemberBtn;
    private javax.swing.JLabel Topic;
    private javax.swing.JButton UpdateMemberBtn;
    private javax.swing.JLabel closeBtn;
    private javax.swing.JTextField emailInput;
    private javax.swing.JLabel emailText;
    private javax.swing.JTextField fullNameInput;
    private javax.swing.JLabel fullNameText;
    private javax.swing.JComboBox<String> genderInput;
    private javax.swing.JLabel genderText;
    private javax.swing.JButton getMemberDataBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField memberIdInput;
    private javax.swing.JLabel memberIdText;
    private javax.swing.JTextField phoneNumberInput;
    private javax.swing.JLabel phoneNumberText;
    // End of variables declaration//GEN-END:variables
}
